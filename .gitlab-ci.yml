image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.3"
  ANDROID_SDK_TOOLS:   "6609375"
  NDK_VERSION: "21d"

before_script:
  - cat /etc/issue
  - uname -a
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget unzip lib32stdc++6 lib32z1 ant ant-optional faketime git tcl libtool automake autoconf gawk libssl-dev make libqt5widgets5

  - cd ..
  - wget --quiet --output-document=android-wait-for-emulator https://raw.githubusercontent.com/travis-ci/travis-cookbooks/0f497eb71291b52a703143c5cd63a217c8766dc9/community-cookbooks/android-sdk/files/default/android-wait-for-emulator
  - chmod +x android-wait-for-emulator

  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - unzip -d cmdline-tools android-sdk.zip
  - export ANDROID_HOME=$PWD/cmdline-tools

  - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null

  - export PATH=$PATH:$PWD/cmdline-tools/platform-tools/
    #- chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | ${ANDROID_HOME}/tools/bin/sdkmanager --licenses || true
  - set -o pipefail
  - mkdir -p ${ANDROID_HOME}/licenses
  - echo 24333f8a63b6825ea9c5514f83c2829b004d1fee > ${ANDROID_HOME}/licenses/android-sdk-license

  - wget --quiet --output-document=android-ndk.zip https://dl.google.com/android/repository/android-ndk-r${NDK_VERSION}-linux-x86_64.zip
  - unzip -qq android-ndk.zip
  - export ANDROID_NDK_HOME=$PWD/android-ndk-r${NDK_VERSION}

build:
  script:
    - cd $CI_PROJECT_DIR
    - ./make-release-build

    # prep for the ./gradlew builds
    - git clean -fdx
    - git reset --hard
    - git submodule foreach --recursive git reset --hard
    - git submodule foreach --recursive git clean -fdx
    - git submodule sync --recursive
    - git submodule foreach --recursive git submodule sync
    - git submodule update --init --recursive
    - echo yes | ${ANDROID_HOME}/tools/bin/sdkmanager --licenses || true
    - ./gradlew clean assemble lint
    - sed -i -e 's,textReport .*,textReport true,' build.gradle

pages:
  stage: deploy
  only:
    - master
  artifacts:
    paths:
      - public
  script:
    - cd $CI_PROJECT_DIR
    - ./gradlew javadoc
    - test -d public || mkdir public
    - cp -a build/docs/javadoc/* public/
