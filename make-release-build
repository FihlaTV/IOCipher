#!/bin/bash
# bash is required because we need bash's printf to guarantee a cross-platform
# timestamp format.

set -e
set -x

if [ -z $ANDROID_HOME ]; then
    if [ -e ~/.android/bashrc ]; then
        . ~/.android/bashrc
    else
        echo "ANDROID_HOME must be set!"
        exit
    fi
fi

projectroot=`pwd`
# standardize timezone to reduce build differences
export TZ=UTC
TIMESTAMP=`printf '%(%Y-%m-%d %H:%M:%S)T' \
    $(git log -n1 --format=format:%at)`
# run the clock at 5% speed, ant requires a moving clock
TIMESTAMP_5=`printf '@%(%Y-%m-%d %H:%M:%S)T x0.05' \
    $(git log -n1 --format=format:%at)`

git reset --hard
git clean -fdx
git submodule foreach --recursive git reset --hard
git submodule foreach --recursive git clean -fdx
git submodule sync --recursive
git submodule foreach --recursive git submodule sync
git submodule update --init --recursive

android update lib-project --path .

faketime -f "$TIMESTAMP" make -C external/
faketime -f "$TIMESTAMP" ndk-build

if [ -e ~/.android/ant.properties ]; then
    cp ~/.android/ant.properties $projectroot/
    faketime -f "$TIMESTAMP_5" ant release
else
    echo "skipping release ant.properties, making debug build"
    faketime -f "$TIMESTAMP_5" ant debug
fi

# `ant release` handles the gpg signing
